shiny::runApp('open_courses/data_cap/app-1')
install.packages("devtools")
install.packages("httr")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("astsa")
library("astsa", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
data(jj)
jj
ls()
jj[1]
jj[84]
jj[1:4]
length(jj)
jjm = as.matrix(jj)
dim(jjm)
options(digits = 2)
?options
?rnorm
(zardoz = ts(rnorm(48), start = c(2293, 6), frequency=12))
(oz = window(zardoz, start=2293, end=c(2293,12)))
(oz = window(zardoz, start=2293, end=c(2295,12)))
time(jj)
options(digits = 7)
time(jj)
cycle(jj)
?wd
?sd
x <- [1,2]
x <- c(1,2)
q()
shiny::runApp('open_courses/data_cap/v2/app-1')
install.packages("textcat")
shiny::runApp('open_courses/data_cap/v2/app-1')
install.packages("rminer")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
library("rgl", lib.loc="/usr/lib/R/site-library")
library(rgl)
example(plot3d)
library(knitr)
library(rgl)
knit_hooks$set(webgl = hook_webgl)
summary(cars)
install.packages("knitr", repos="http://R-Forge.R-project.org")
install.packages("knitr")
library(knitr)
library(rgl)
knit_hooks$set(webgl = hook_webgl)
source('~/.active-rstudio-document', echo=TRUE)
knit_hooks
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("BH", "chron", "data.table", "devtools", "digest", "dplyr", "GGally", "htmltools", "httpuv", "httr", "igraph", "jsonlite", "knitr", "manipulate", "memisc", "mime", "multcomp", "mvtnorm", "pbkrtest", "plyr", "R6", "Rcpp", "RcppEigen", "RCurl", "rJava", "RMySQL", "roxygen2", "rstudioapi", "shiny", "stringi", "stringr", "textcat", "xtable"))
install.packages("rglwidget")
install.packages("rglwidget")
library("rgl", lib.loc="/usr/lib/R/site-library")
library("knitr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
knit_hooks
install.packages("knitr", repos="http://R-Forge.R-project.org")
install.packages("rglobi")
install.packages("rglwidget")
setwd("~/open_courses/data_analyst_nanodegree/P4/work4")
data(volcano)
z <- 2 * volcano
View(z)
x <- 10 * (1:nrow(z))
y <- 10 * (1:ncol(z))
surface3d(x, y, z, color = col, back = "lines")
source('~/.active-rstudio-document', echo=TRUE)
open3d()
surface3d(x, y, z, color = col, back = "lines")
zlim <- range(y)
zlen <- zlim[2] - zlim[1] + 1
colorlut <- terrain.colors(zlen) # height color lookup table
col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
data(volcano)
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
zlim <- range(y)
zlen <- zlim[2] - zlim[1] + 1
colorlut <- terrain.colors(zlen) # height color lookup table
col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
open3d()
surface3d(x, y, z, color = col, back = "lines")
x <- 1:10
y <- 1:10
z <- matrix(outer(x - 5, y - 5) + rnorm(100), 10, 10)
open3d()
persp3d(x, y, z, col = "red", alpha = 0.7, aspect = c(1, 1, 0.5))
grid3d(c("x", "y+", "z"))
open3d()
x <- rnorm(100)
y <- rnorm(100)
z <- 0.2*x - 0.3*y + rnorm(100, sd = 0.3)
fit <- lm(z ~ x + y)
plot3d(x, y, z, type = "s", col = "red", size = 1)
coefs <- coef(fit)
a <- coefs["x"]
b <- coefs["y"]
c <- -1
d <- coefs["(Intercept)"]
planes3d(a, b, c, d, alpha = 0.5)
open3d()
ids <- plot3d(x, y, z, type = "s", col = "red", size = 1, forceClipregion = TRUE)
useSubscene3d(ids["clipregion"])
clipplanes3d(a, b, c, d)
open3d()
x <- rnorm(100)
y <- rnorm(100)
z <- 0.2*x - 0.3*y + rnorm(100, sd = 0.3)
fit <- lm(z ~ x + y)
plot3d(x, y, z, type = "s", col = "red", size = 1)
coefs <- coef(fit)
a <- coefs["x"]
b <- coefs["y"]
c <- -1
d <- coefs["(Intercept)"]
planes3d(a, b, c, d, alpha = 0.5)
x <- seq(-10, 10, length = 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2 + y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
open3d()
bg3d("white")
material3d(col = "black")
persp3d(x, y, z, aspect = c(1, 1, 0.5), col = "lightblue",
xlab = "X", ylab = "Y", zlab = "Sinc( r )")
xE <- c(-10, 10); xy <- expand.grid(xE, xE)
points3d(xy[, 1], xy[, 2], 6, col = "red")
lines3d(x, y = 10, z = 6 + sin(x), col = "green")
lat <- matrix(seq(90, -90, len = 50)*pi/180, 50, 50, byrow = TRUE)
long <- matrix(seq(-180, 180, len = 50)*pi/180, 50, 50)
r <- 6378.1 # radius of Earth in km
x <- r*cos(lat)*cos(long)
y <- r*cos(lat)*sin(long)
z <- r*sin(lat)
open3d()
persp3d(x, y, z, col = "white",
texture = system.file("textures/worldsmall.png", package = "rgl"),
specular = "black", axes = FALSE, box = FALSE, xlab = "", ylab = "", zlab = "",
normal_x = x, normal_y = y, normal_z = z)
if (!rgl.useNULL())
play3d(spin3d(axis = c(0, 0, 1), rpm = 16), duration = 2.5)
persp3d(x, y, z, col = "white",
texture = system.file("textures/world.png", package = "rgl"),
specular = "black", axes = FALSE, box = FALSE, xlab = "", ylab = "", zlab = "",
normal_x = x, normal_y = y, normal_z = z)
View(alcohol_ratio)
